/*
 * Placeholder loading
 * @link https://zalog.github.io/placeholder-loading
 * @license MIT
 * @copyright Catalin Zalog
 *
 * Example Usage:
 * <div class="placeholder">
    <div class="placeholder__inner placeholder__col-12">
      <div class="placeholder__picture"></div>
      <div class="placeholder__row">
        <div class="placeholder__col placeholder__col--6 placeholder__col--big"></div>
        <div class="placeholder__col placeholder__col--4 placeholder__col--empty placeholder__col--big"></div>
        <div class="placeholder__col placeholder__col--2 placeholder__col--big"></div>
        <div class="placeholder__col placeholder__col--4"></div>
        <div class="placeholder__col placeholder__col--8 placeholder__col--empty"></div>
        <div class="placeholder__col placeholder__col--6"></div>
        <div class="placeholder__col placeholder__col--6 placeholder__col--empty"></div>
        <div class="placeholder__col placeholder__col--12"></div>
      </div>
    </div>
  </div>
 *
 */

$ph-bg: #fff;
$ph-color: #ced4da;
$ph-border-radius: 2px;

$ph-gutter: 1rem;
$ph-spacer: 1rem;

$ph-avatar-border-radius: 50%;

$ph-animation-duration: 0.8s;

.placeholder {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  margin-bottom: $ph-gutter;
  background-color: $ph-bg;
  border-radius: $ph-border-radius;

  &::before {
    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 50%;
    z-index: 1;
    width: 500%;
    margin-left: -250%;
    animation: phAnimation $ph-animation-duration linear infinite;
    background: linear-gradient(to right, rgba($ph-bg, 0) 46%, rgba($ph-bg, .35) 50%, rgba($ph-bg, 0) 54%) 50% 50%;
  }

  &__inner {
    flex: 1 1 auto;
    display: flex;
    flex-flow: column;
  }

  &__row {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: ($ph-spacer / 2);
  }

  &__col {
    height: 10px;
    margin-bottom: ($ph-spacer / 2);
    background-color: $ph-color;

    &--big {
      height: 20px;
      margin-bottom: $ph-spacer;
    }

    &--empty {
      background-color: rgba($ph-bg, 0);
    }

    &--2 {
      flex: 0 0 percentage(2 / 12);
    }

    &--4 {
      flex: 0 0 percentage(4 / 12);
    }

    &--6 {
      flex: 0 0 percentage(6 / 12);
    }

    &--8 {
      flex: 0 0 percentage(8 / 12);
    }

    &--10 {
      flex: 0 0 percentage(10 / 12);
    }

    &--12 {
      flex: 0 0 percentage(12 / 12);
    }
  }

  &__avatar {
    position: relative;
    width: 100%;
    min-width: 60px;
    background-color: $ph-color;
    margin-bottom: $ph-spacer;
    border-radius: $ph-avatar-border-radius;
    overflow: hidden;

    &::before {
      content: " ";
      display: block;
      padding-top: 100%;
    }
  }

  &__picture {
    width: 100%;
    height: 120px;
    background-color: $ph-color;
    margin-bottom: $ph-spacer;
  }
}

@keyframes phAnimation {
  0% {
    transform: translate3d(-30%, 0, 0);
  }

  100% {
    transform: translate3d(30%, 0, 0);
  }
}
